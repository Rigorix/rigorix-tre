// Generated by CoffeeScript 1.6.3
Rigorix.directive("refreshStateOnLoad", [
  '$timeout', '$location', function(timer, location) {
    return {
      link: function(scope, element, attrs, ctrl) {
        var doRefresh;
        doRefresh = function() {
          if ($(element).find("li.active").size() === 0) {
            return window.location.href = $(element).find("li:first a").attr("href");
          }
        };
        return timer(doRefresh, 0);
      }
    };
  }
]);

Rigorix.directive("onListaSfideLoad", function() {
  return function(scope, element, attrs) {
    return scope.__sfide = scope[attrs.onListaSfideLoad];
  };
});

Rigorix.directive("beautifyDate", function() {
  return {
    restrict: 'E',
    templateUrl: '/app/templates/directives/beautify-date.html',
    link: function(scope, element, attr) {
      return scope.date = attr.date;
    }
  };
});

Rigorix.directive("username", function(UserService) {
  return {
    restrict: 'E',
    templateUrl: '/app/templates/directives/username.html',
    link: function(scope, element, attr) {
      if (RigorixStorage.users[attr.idUtente] != null) {
        return scope.userObject = RigorixStorage.users[attr.idUtente];
      } else {
        return UserService.getUsernameById({
          filter: attr.idUtente
        }, function(json) {
          scope.userObject = json;
          return RigorixStorage.users[attr.idUtente] = json;
        });
      }
    }
  };
});
